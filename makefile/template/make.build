PHONY := __build
__build:


objects :=
sub_dirs :=
EXTRA_CFLAGS :=

include Makefile


__sub_dirs	:= $(patsubst %/,%,$(filter %/, $(objects)))
sub_dirs	+= $(__sub_dirs)


sub_dir_objs := $(foreach f,$(sub_dirs),$(f)/built-in.o)

cur_objs := $(filter-out %/, $(objects))
dep_files := $(subst .o,.d,$(cur_objs))
dep_files := $(wildcard $(dep_files))


ifneq ($(dep_files),)
  include $(dep_files)
endif


PHONY += $(sub_dirs)


__build : $(sub_dirs) built-in.o

$(sub_dirs):
	make -C $@ -f $(TOPDIR)/make.build

built-in.o : $(sub_dirs) $(cur_objs)
	$(LD) -r -o $@ $(cur_objs) $(sub_dir_objs)

dep_file = $(subst .o,.d,$@)

%.o : %.c
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(CFLAGS_$@) -Wp,-MD,$(dep_file) -c -o $@ $<
	
.PHONY : $(PHONY)